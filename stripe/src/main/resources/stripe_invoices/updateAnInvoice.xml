<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="updateAnInvoice" xmlns="http://ws.apache.org/ns/synapse">
    <!-- Required parameters -->
    <parameter name="invoiceId" description="The identifier of the invoice to be updated."/>
    <!-- Optional parameters -->
    <parameter name="applicationFee" description="the amount to be applied to the invoice and transferred to the application owner’s Stripe account."/>
    <parameter name="description" description="description about the invoice"/>
    <parameter name="statementDescription" description="Extra information about a charge for the customer’s credit card statement."/>
    <parameter name="metadata" description="A set of key/value pairs that you can attach to a refund object. "/>
    <parameter name="closed" description="Boolean representing whether an invoice is closed or not. "/>
    <parameter name="forgiven" description="Boolean representing whether an invoice is forgiven or not."/>
    <sequence>
        <property name="uri.var.invoiceId" expression="$func:invoiceId"/>
        <property name="uri.var.applicationFee" expression="$func:applicationFee"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.statementDescription" expression="$func:statementDescription"/>
        <property name="uri.var.metadata" expression="$func:metadata"/>
        <property name="uri.var.closed" expression="$func:closed"/>
        <property name="uri.var.forgiven" expression="$func:forgiven"/>
        <payloadFactory media-type="json">
            <format>
                {

                }
            </format>
        </payloadFactory>
        <script language="js">
            <![CDATA[
				//request body param variables
				var applicationFee = mc.getProperty('uri.var.applicationFee');
				var forgiven = mc.getProperty('uri.var.forgiven');
				var description = mc.getProperty('uri.var.description');
				var statementDescription = mc.getProperty('uri.var.statementDescription');
				var closed = mc.getProperty('uri.var.closed');
                var metadata= mc.getProperty('uri.var.metadata');
                //Get the existing payload
				var payload = mc.getPayloadJSON();
				if (applicationFee != null && applicationFee != "") {
					payload["application_fee"]=applicationFee;
				}
                if (forgiven != null && forgiven != "") {
                        payload["forgiven"] = forgiven;
                }
                if (description != null && description != "") {
                        payload["description"] = description;
                }
                if (statementDescription != null && statementDescription != "") {
                        payload["statement_description"] = statementDescription;
                }
                if (closed != null && closed != "") {
                        payload["closed"] = closed;
                }
                if (metadata != null && metadata != "") {
                    var txt = '{"metadataList":'+metadata+'}';
                    var query="";
                    var obj = eval ("(" + txt + ")");
                    for(var key in obj.metadataList){
                       payload["metadata["+key+"]"]=obj.metadataList[key];
                    }
		        }
				//Set the newly constructed payload
				mc.setPayloadJSON(payload);
			]]>
        </script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/invoices/{uri.var.invoiceId}" />
            </endpoint>
        </call>
    </sequence>
</template>