<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="retrieveAnUpcomingInvoice" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="customer" description="The identifier of the customer whose upcoming invoice to be retrieved."/>
    <parameter name="subscription" description="The identifier of the subscription to be retrieved the upcoming invoice"/>
    <parameter name="apiParameters" description="parameter to concatenate  the other parameters"/>
    <sequence>
        <property name="uri.var.customer" expression="$func:customer"/>
        <property name="uri.var.subscription" expression="$func:subscription"/>

        <property name="uri.var.apiParameters" value=""/>
        <filter xpath="(not(get-property('uri.var.customer') = '' or (not(string(get-property('uri.var.customer'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;customer=',get-property('uri.var.customer'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.subscription') = '' or (not(string(get-property('uri.var.subscription'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;subscription=',get-property('uri.var.subscription'))"/>
            </then>
        </filter>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/invoices/upcoming?{uri.var.apiParameters}" />
            </endpoint>
        </call>
    </sequence>
</template>