<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
*  WSO2 Inc. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
-->
<template name="createAnInvoice" xmlns="http://ws.apache.org/ns/synapse">
   <!-- Required parameters -->
   <parameter name="customer" description="The identifier of the customer to whom the invoice is created."/>
   <parameter name="applicationFee"
              description="A fee that will be applied to the invoice and transferred to the application owner’s Stripe account."/>
   <parameter name="description" description="description about the invoice"/>
   <parameter name="statementDescription"
              description="Extra information about a charge for the customer’s credit card statement."/>
   <parameter name="metadata" description="A set of key/value pairs that you can attach to a refund object. "/>
   <parameter name="subscription" description="The ID of the subscription to invoice. "/>
   <sequence>
      <property name="uri.var.customer" expression="$func:customer"/>
      <property name="uri.var.applicationFee" expression="$func:applicationFee"/>
      <property name="uri.var.description" expression="$func:description"/>
      <property name="uri.var.statementDescription" expression="$func:statementDescription"/>
      <property name="uri.var.metadata" expression="$func:metadata"/>
      <property name="uri.var.subscription" expression="$func:subscription"/>
      <payloadFactory media-type="json">
         <format>
            {
            "customer":"$1"
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.customer')"/>
         </args>
      </payloadFactory>
      <script language="js"><![CDATA[
         //request body param variables
         var applicationFee=mc.getProperty('uri.var.applicationFee');
         var description=mc.getProperty('uri.var.description');
         var statementDescription=mc.getProperty('uri.var.statementDescription');
         var subscription=mc.getProperty('uri.var.subscription');
         var metadata=mc.getProperty('uri.var.metadata');

         //Get the existing payload
         var payload = mc.getPayloadJSON();
         if (applicationFee != null && applicationFee != "") {
             payload["application_fee"]=applicationFee;
         }
          if (description != null && description != "") {
             payload["description"]=description;
         }
         if (statementDescription != null && statementDescription != "") {
             payload["statement_description"]=statementDescription;
         }
         if (subscription != null && subscription != "") {
             payload["subscription"]=subscription;
         }
          if (metadata != null && metadata != "") {
                 var txt = '{"metadataList":'+metadata+'}';
                 var query="";
                 var obj = eval ("(" + txt + ")");
                 for(var key in obj.metadataList){
                    payload["metadata["+key+"]"]=obj.metadataList[key];
                 }
             }
         //Set the newly constructed payload
         mc.setPayloadJSON(payload);
      ]]>
      </script>
      <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
      <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
      <call>
         <endpoint>
            <http method="post"
                  uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/invoices"/>
         </endpoint>
      </call>
   </sequence>
</template>