<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="updateARecipientDetails" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="recipientId" description="Identifier of the recipient to be updated"/>
    <parameter name="recipientName" description="The recipient's full, legal name"/>
    <parameter name="taxId" description="The recipient's tax ID"/>
    <parameter name="bankAccount" description="The token of the bank account to attach to the recipient"/>
    <!--parameters for bank account library -->
    <parameter name="bankAccountCountry" description="The country the bank account is in"/>
    <parameter name="routingNumber" description="The routing number for the bank account"/>
    <parameter name="accountNumber" description="The account number for the bank account"/>
    <parameter name="card" description="The identifier of the card attached the recipient"/>
    <!--parameters for card library -->
    <parameter name="cardNumber" description="The card number, as a string without any separators"/>
    <parameter name="expMonth" description="card's expiration month"/>
    <parameter name="expYear" description="card's expiration year"/>
    <parameter name="cvc" description="Card security code"/>
    <parameter name="name" description="Cardholder's full name"/>
    <parameter name="addressLine1" description="Address line 1"/>
    <parameter name="addressLine2" description="Address line 2"/>
    <parameter name="city" description="city of the address"/>
    <parameter name="zip" description="zip of the address"/>
    <parameter name="state" description="state of the address"/>
    <parameter name="country" description="country of the address"/>
    <parameter name="defaultCard" description="Type of the recipient"/>
    <parameter name="email" description="email id of the recipient"/>
    <parameter name="description" description="description of the recipient"/>
    <parameter name="metadata" description="A set of key/value pairs that you can attach to a customer object."/>
    <sequence>
        <property name="uri.var.recipientId" expression="$func:recipientId"/>
        <property name="uri.var.recipientName" expression="$func:recipientName"/>
        <property name="uri.var.defaultCard" expression="$func:defaultCard"/>
        <property name="uri.var.taxId" expression="$func:taxId"/>
        <property name="uri.var.bankAccount" expression="$func:bankAccount"/>
        <property name="uri.var.bankAccountCountry" expression="$func:bankAccountCountry"/>
        <property name="uri.var.routingNumber" expression="$func:routingNumber"/>
        <property name="uri.var.accountNumber" expression="$func:accountNumber"/>
        <property name="uri.var.card" expression="$func:card"/>
        <property name="uri.var.cardNumber" expression="$func:cardNumber"/>
        <property name="uri.var.expMonth" expression="$func:expMonth"/>
        <property name="uri.var.expYear" expression="$func:expYear"/>
        <property name="uri.var.cvc" expression="$func:cvc"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.addressLine1" expression="$func:addressLine1"/>
        <property name="uri.var.addressLine2" expression="$func:addressLine2"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.zip" expression="$func:zip"/>
        <property name="uri.var.state" expression="$func:state"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.metadata" expression="$func:metadata"/>
        <payloadFactory media-type="json">
            <format>
                {

                }
            </format>
        </payloadFactory>
        <script language="js"><![CDATA[
            //request body param variables
            var recipientName=mc.getProperty('uri.var.recipientName');
            var taxId=mc.getProperty('uri.var.taxId');
            var description = mc.getProperty('uri.var.description');
            var defaultCard = mc.getProperty('uri.var.defaultCard');
		    var email = mc.getProperty('uri.var.email');
            var metadata=mc.getProperty('uri.var.metadata');
            var card=mc.getProperty('uri.var.card');
            var cardNumber=mc.getProperty('uri.var.cardNumber');
            var expMonth=mc.getProperty('uri.var.expMonth');
            var expYear=mc.getProperty('uri.var.expYear');
            var cvc=mc.getProperty('uri.var.cvc');
            var name=mc.getProperty('uri.var.name');
            var addressLine1=mc.getProperty('uri.var.addressLine1');
            var addressLine2=mc.getProperty('uri.var.addressLine2');
            var city=mc.getProperty('uri.var.city');
            var zip=mc.getProperty('uri.var.zip');
            var state=mc.getProperty('uri.var.state');
            var country=mc.getProperty('uri.var.country');
            var bankAccount=mc.getProperty('uri.var.bankAccount');
            var bankAccountCountry=mc.getProperty('uri.var.bankAccountCountry');
            var routingNumber=mc.getProperty('uri.var.routingNumber');
            var accountNumber=mc.getProperty('uri.var.accountNumber');
            //Get the existing payload
            var payload = mc.getPayloadJSON();
             if (recipientName != null && recipientName != "") {
                payload["name"]=recipientName;
            }
            if (taxId != null && taxId != "") {
                payload["tax_id"]=taxId;
            }
             if (defaultCard != null && defaultCard != "") {
                payload["default_card"]=defaultCard;
            }
            if (bankAccount != null && bankAccount != "") {
                payload["bank_account"]=bankAccount;
            }
            else{
                if (bankAccountCountry != null && bankAccountCountry != "") {
                    payload["bank_account[country]"]=bankAccountCountry;
                }
                if (routingNumber != null && routingNumber != "") {
                    payload["bank_account[routing_number]"]=routingNumber;
                }
                if (accountNumber != null && accountNumber != "") {
                    payload["bank_account[account_number]"]=accountNumber;
                }
            }
            if (card != null && card != "") {
					payload["card"]=card;
            }
            else{
                if (cardNumber != null && cardNumber != "") {
                    payload["card[number]"]=cardNumber;
                }
                if (expMonth != null && expMonth != "") {
                    payload["card[exp_month]"]=expMonth;
                }
                if (expYear != null && expYear != "") {
                    payload["card[exp_year]"] = expYear;
                }
                if (cvc != null && cvc != "") {
                    payload["card[cvc]"] = cvc;
                }
                if (name != null && name != "") {
                    payload["card[name]"] = name;
                }
                if (addressLine1 != null && addressLine1 != "") {
                    payload["card[address_line1]"] = addressLine1;
                }
                if (addressLine2 != null && addressLine2 != "") {
                    payload["card[address_line2]"] = addressLine2;
                }
                if (city != null && city != "") {
                    payload["card[city]"] = city;
                }
                if (zip != null && zip != "") {
                    payload["card[zip]"] = zip;
                }
                if (state != null && state != "") {
                    payload["card[state]"] = state;
                }
                if (country != null && country != "") {
                    payload["card[country]"] = country;
                }
            }
            if (description != null && description != "") {
                payload["description"]=description;
            }
            if (email != null && email != "") {
                payload["email"]=email;
            }
            if (metadata != null && metadata != "") {
                var txt = '{"metadataList":'+metadata+'}';
                var query="";
                var obj = eval ("(" + txt + ")");
                for(var key in obj.metadataList){
                    payload["metadata["+key+"]"]=obj.metadataList[key];
                }
            }
            //Set the newly constructed payload
            mc.setPayloadJSON(payload);
        ]]>
        </script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/recipients/{uri.var.recipientId}" />
            </endpoint>
        </call>
    </sequence>
</template>