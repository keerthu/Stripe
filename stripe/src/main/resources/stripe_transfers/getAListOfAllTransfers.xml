<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="getAListOfAllTransfers" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="endingBefore" description="A cursor for use in pagination"/>
    <parameter name="limit" description="A limit on the number of objects to be returned"/>
    <parameter name="startingAfter" description="A cursor for use in pagination"/>
    <parameter name="recipient" description="Only return transfers for the recipient specified by this recipient ID."/>
    <parameter name="status" description="Only return transfers that have the given status"/>
    <parameter name="createdGT" description="Return values where the date field is after this timestamp."/>
    <parameter name="createdGTE" description="Return values where the date field is after or equal to this timestamp."/>
    <parameter name="createdLT" description="Return values where the date field is before this timestamp."/>
    <parameter name="createdLTE" description="Return values where the date field is before or equal to this timestamp."/>
    <parameter name="dateGT" description="Return values where the date field is after this timestamp."/>
    <parameter name="dateGTE" description="Return values where the date field is after or equal to this timestamp."/>
    <parameter name="dateLT" description="Return values where the date field is before this timestamp."/>
    <parameter name="dateLTE" description="Return values where the date field is before or equal to this timestamp."/>
    <parameter name="apiParameters" description="parameter to concatenate  the other parameters"/>
    <sequence>
        <property name="uri.var.endingBefore" expression="$func:endingBefore"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.startingAfter" expression="$func:startingAfter"/>
        <property name="uri.var.recipient" expression="$func:recipient"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.createdGT" expression="$func:createdGT"/>
        <property name="uri.var.createdGTE" expression="$func:createdGTE"/>
        <property name="uri.var.createdLT" expression="$func:createdLT"/>
        <property name="uri.var.createdLTE" expression="$func:createdLTE"/>
        <property name="uri.var.dateGT" expression="$func:dateGT"/>
        <property name="uri.var.dateGTE" expression="$func:dateGTE"/>
        <property name="uri.var.dateLT" expression="$func:dateLT"/>
        <property name="uri.var.dateLTE" expression="$func:dateLTE"/>
        <property name="uri.var.apiParameters" value=""/>
        <filter xpath="(not(get-property('uri.var.limit') = '' or (not(string(get-property('uri.var.limit'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;limit=',get-property('uri.var.limit'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.startingAfter') = '' or (not(string(get-property('uri.var.startingAfter'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;starting_after=',get-property('uri.var.startingAfter'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.endingBefore') = '' or (not(string(get-property('uri.var.endingBefore'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;ending_before=',get-property('uri.var.endingBefore'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.recipient') = '' or (not(string(get-property('uri.var.recipient'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;recipient=',get-property('uri.var.recipient'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.status') = '' or (not(string(get-property('uri.var.status'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;status=',get-property('uri.var.status'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.createdGT') = '' or (not(string(get-property('uri.var.createdGT'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;created[gt]=',get-property('uri.var.createdGT'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.createdGTE') = '' or (not(string(get-property('uri.var.createdGTE'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;created[gte]=',get-property('uri.var.createdGTE'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.createdLT') = '' or (not(string(get-property('uri.var.createdLT'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;created[lt]=',get-property('uri.var.createdLT'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.createdLTE') = '' or (not(string(get-property('uri.var.createdLTE'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;created[lte]=',get-property('uri.var.createdLTE'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.dateGT') = '' or (not(string(get-property('uri.var.dateGT'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;date[gt]=',get-property('uri.var.dateGT'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.dateGTE') = '' or (not(string(get-property('uri.var.dateGTE'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;date[gte]=',get-property('uri.var.dateGTE'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.dateLT') = '' or (not(string(get-property('uri.var.dateLT'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;date[lt]=',get-property('uri.var.dateLT'))"/>
            </then>
        </filter>
        <filter xpath="(not(get-property('uri.var.dateLTE') = '' or (not(string(get-property('uri.var.dateLTE'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;date[lte]=',get-property('uri.var.dateLTE'))"/>
            </then>
        </filter>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/transfers?{uri.var.apiParameters}" />
            </endpoint>
        </call>

    </sequence>
</template>