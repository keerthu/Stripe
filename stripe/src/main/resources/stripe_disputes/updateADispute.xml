<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
*
*  WSO2 Inc. licenses this file to you under the Apache License,
*  Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License.
*  You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
-->
<template name="updateADispute" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="chargeId" description="The identifier of the charge which dispute to be updated"/>
   <!-- Optional parameters -->
   <parameter name="metadata" description="A set of key/value pairs that you can attach to a dispute object"/>
   <parameter name="evidence" description="Evidence to upload to respond to a dispute"/>
   <sequence>
      <property name="uri.var.couponId" expression="$func:couponId"/>
      <property name="uri.var.metadata" expression="$func:metadata"/>
      <property name="uri.var.evidence" expression="$func:evidence"/>

      <payloadFactory media-type="json">
         <format>
            {
            }
         </format>

      </payloadFactory>
      <script language="js"><![CDATA[
            //request body param variables
            var metadata=mc.getProperty('uri.var.metadata');
            var evidence=mc.getProperty('uri.var.evidence');

            //Get the existing payload
            var payload = mc.getPayloadJSON();

            if (evidence != null && evidence != "") {
              var txt = '{"evidenceList":'+evidence+'}';
               var query="";
               var obj = eval ("(" + txt + ")");
               for(var key in obj.evidenceList){
                  payload["evidence["+key+"]"]=obj.evidenceList[key];
               }
            }
            if (metadata != null && metadata != "") {
               var txt = '{"metadataList":'+metadata+'}';
               var query="";
               var obj = eval ("(" + txt + ")");
               for(var key in obj.metadataList){
                  payload["metadata["+key+"]"]=obj.metadataList[key];
               }
            }

            //Set the newly constructed payload
            mc.setPayloadJSON(payload);
        ]]>
      </script>
      <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
      <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
      <call>
         <endpoint>
            <http method="post"
                  uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/charges/{uri.var.chargeId}/dispute"/>
         </endpoint>
      </call>

   </sequence>
</template>

