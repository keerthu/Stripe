<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="createATransfer" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="card" description="token id of the card"/>
    <parameter name="amount" description="The amount to transfer"/>
    <parameter name="currency" description="discount amount to be applied to all recurring charges"/>
    <parameter name="description" description="description of the transfer"/>
    <parameter name="recipient" description="The ID of an existing, verified recipient that the money will be transferred to in this request"/>
    <parameter name="bankAccount" description="recipient's bank account"/>
    <parameter name="statementDescription" description="description need to be attached with recipient's bank or card statement"/>
    <parameter name="metadata" description="A set of key/value pairs that you can attach to a transfer object."/>
    <sequence>
        <property name="uri.var.card" expression="$func:card"/>
        <property name="uri.var.amount" expression="$func:amount"/>
        <property name="uri.var.currency" expression="$func:currency"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.recipient" expression="$func:recipient"/>
        <property name="uri.var.bankAccount" expression="$func:bankAccount"/>
        <property name="uri.var.statementDescription" expression="$func:statementDescription"/>
        <property name="uri.var.metadata" expression="$func:metadata"/>
        <payloadFactory media-type="json">
            <format>
                {
                "recipient":"$1",
                "amount":"$2",
                "currency":"$3"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.recipient')"/>
                <arg expression="get-property('uri.var.amount')"/>
                <arg expression="get-property('uri.var.currency')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
				//request body param variables
				var card = mc.getProperty('uri.var.card');
                var metadata= mc.getProperty('uri.var.metadata');
				var description = mc.getProperty('uri.var.description');
				var bankAccount = mc.getProperty('uri.var.bankAccount');
				var statementDescription = mc.getProperty('uri.var.statementDescription');
                //Get the existing payload
				var payload = mc.getPayloadJSON();
				if (card != null && card != "") {
					payload["card"]=card;
				}
                if (description != null && description != "") {
                        payload["description"] = description;
                }
                if (bankAccount != null && bankAccount != "") {
                        payload["bank_account"] = bankAccount;
                }
                if (statementDescription != null && statementDescription != "") {
                        payload["statement_description"] = statementDescription;
                }
                if (metadata != null && metadata != "") {
                    var txt = '{"metadataList":'+metadata+'}';
                    var query="";
                    var obj = eval ("(" + txt + ")");
                    for(var key in obj.metadataList){
                       payload["metadata["+key+"]"]=obj.metadataList[key];
                    }
		        }
				//Set the newly constructed payload
				mc.setPayloadJSON(payload);

			]]>
        </script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/transfers" />
            </endpoint>
        </call>

    </sequence>
</template>